{"version":3,"sources":["assets/logo-dark.svg","assets/logo-light.svg","components/containers/header.component.js","redux/actions/change.main.color.action.js","redux/actions/all.actions.js","redux/actions/change.mixed.color.action.js","redux/actions/mixed.actions.js","func/functions.js","components/color.picker.js","redux/actions/darker.actions.js","redux/actions/remove.selected.color.action.js","components/slected.colors.js","components/darker.lighter.js","redux/actions/change.background.actions.js","components/mixed.js","components/containers/create.component.js","components/containers/footer.component.js","components/example.js","components/containers/explore.component.js","redux/actions/flat.material.actions.js","components/scheme.js","redux/actions/schemes.array.actions.js","components/containers/presets.component.js","components/table.js","components/variables.js","components/containers/export.component.js","redux/actions/variable.array.actions.js","components/containers/app.component.js","serviceWorker.js","redux/reducers/main.color.reducer.js","redux/reducers/darker.array.reducer.js","redux/reducers/selected.colors.reducer.js","redux/reducers/change.background.reducer.js","redux/reducers/mixed.color.reducer.js","redux/reducers/mixed.array.reducer.js","data.js","redux/reducers/schemes.array.reducer.js","redux/reducers/variable.array.reducer.js","redux/reducers/index.js","redux/reducers/flat.material.reducers.js","redux/create.store.js","index.js"],"names":["module","exports","__webpack_require__","p","HeaderComponent","_this","this","react_default","a","createElement","className","src","alt","onClick","props","history","push","location","pathname","Component","withRouter","changeMainColorAction","color","dispatch","type","payload","changeMixedColorAction","changeMixedArrayAction","array","getDarkerArray","darkerArray","i","selected","Color","darken","hex","getMixedArray","mainColor","mixedWithColor","mixedArray","mix","isVisibleRemoveBtn","count","forEach","element","length","ColorPickerComponent","changeMixedColor","_ref","changeMainColor","_ref2","mixedColor","hidden","lib_default","enableAlpha","animation","onChange","lib","mode","connect","store","removeSelectedColor","SelectedColors","getEmptyElements","countOfElements","emptyElements","key","_this2","selectedColors","map","item","index","style","backgroundColor","concat","removeColor","library","add","faTimes","DarkerAndLighterComponent","isDarkBg","isDarkBgDarker","selectColor","index_es","icon","changeBg","selectAllColors","removeAllColors","selectDarkLightAction","selectAllDarkLightAction","MixedComponent","color_picker","isDarkBgMixed","selectMixedAction","selectAllMixedAction","CreateComponent","isLight","slected_colors","darker_lighter","mixed","FooterComponent","ExampleComponent","ExploreComponent","flat","example","selectFlatItem","material","selectMaterialItem","flatArray","materialArray","selectFlatItemAction","selectMaterialItemAction","faCheck","SchemeComponent","name","colors","selectSchemeItemAction","scheme","PresetsComponent","schemesArray","components_scheme","Object","assign","selectSchemeItem","TableComponent","string","data-index","defaultValue","onCgangeVar","VariablesComponent","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","activateItem","itemName","state","setState","defineProperty","active","sass","less","stylus","variableArray","variableName","ExportComponent","changeVariable","target","data","attributes","getNamedItem","value","variable","initVariableArray","colorsArray","varArr","itemObj","getVariablesArray","table","variables","initVariatablesAction","changeVariableAction","AppComponent","BrowserRouter","header_component","Switch","Route","exact","path","component","footer_component","Boolean","window","hostname","match","initState","mainColorReducer","arguments","undefined","action","darkerArrayReducer","toConsumableArray","selectedColorsReducer","includes","filter","slice","newDarkerState","newMixedState","changeBgReducer","mixedColorReducer","mixedArrayReducer","presetns","schemesArrayReducer","variableArrayReducer","combineReducers","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","es","app_component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.36f345c6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-dark.fbc0676a.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-light.8a246dfd.svg\";","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport logo from './../../assets/logo-dark.svg'\r\nimport '../styles.scss';\r\n\r\nclass HeaderComponent extends Component {\r\n  \r\n  render () {\r\n    \r\n    return (\r\n      <header>\r\n        <img \r\n          className = 'logo-img-svg'\r\n          src = 'https://dosandk.github.io/react-challenge-colorizr/images/logo-dark.svg' \r\n          alt = 'logo'\r\n        />\r\n        <ul className = 'nav'>\r\n          <li\r\n          onClick = {() => this.props.history.push('/')}\r\n          className = {this.props.location.pathname === '/' ? 'active' : ''}\r\n          >\r\n            Create\r\n          </li>\r\n          <li \r\n            onClick = {() => this.props.history.push('/explore')}\r\n            className = {this.props.location.pathname === '/explore' ? 'active' : ''}\r\n          >\r\n            Explore\r\n          </li>\r\n          <li\r\n          onClick = {() => this.props.history.push('/presets')}\r\n          className = {this.props.location.pathname === '/presets' ? 'active' : ''}\r\n          >\r\n            Presets\r\n          </li>\r\n          <li\r\n          onClick = {() => this.props.history.push('/export')}\r\n          className = {this.props.location.pathname === '/export' ? 'active' : ''}\r\n          >\r\n            Export\r\n          </li>\r\n        </ul>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(HeaderComponent);\r\n","import { CHANGE_MAIN_COLOR } from './all.actions';\r\n\r\nconst changeMainColorAction = color => dispatch => {\r\n  return dispatch({type: CHANGE_MAIN_COLOR, payload: color});\r\n}\r\n\r\nexport default changeMainColorAction;","export const CHANGE_BG_DARKER = 'CHANGE_BG_DARKER';\r\nexport const CHANGE_BG_MIXED = 'CHANGE_BG_MIXED';\r\nexport const CHANGE_MAIN_COLOR = 'CHANGE_MAIN_COLOR';\r\nexport const CHANGE_MIXED_COLOR = 'CHANGE_MIXED_COLOR';\r\nexport const CHANGE_DARKER_ARRAY = 'CHANGE_DARKER_ARRAY';\r\nexport const CHANGE_MIXED_ARRAY = 'CHANGE_MIXED_ARRAY';\r\nexport const CHANGE_VARIABLE = 'CHANGE_VARIABLE';\r\nexport const SELECT_DARKER_ITEM = 'SELECT_DARKER_ITEM';\r\nexport const SELECT_MIXED_ITEM = 'SELECT_MIXED_ITEM';\r\nexport const SELECT_FLAT_ITEM = 'SELECT_FLAT_ITEM';\r\nexport const SELECT_SCHEME_ITEM = 'SELECT_SCHEME_ITEM';\r\nexport const SELECT_MATERIAL_ITEM = 'SELECT_MATERIAL_ITEM';\r\nexport const SELECT_ALL_DARKER_ITEMS = 'SELECT_ALL_DARKER_ITEMS';\r\nexport const SELECT_ALL_MIXED_ITEMS = 'SELECT_ALL_MIXED_ITEMS';\r\nexport const REMOVE_ALL_DARKER_ITEMS = 'REMOVE_ALL_DARKER_ITEMS';\r\nexport const REMOVE_ALL_MIXED_ITEMS = 'REMOVE_ALL_MIXED_ITEMS';\r\nexport const REMOVE_SELECTED_COLOR = 'REMOVE_SELECTED_COLOR';\r\nexport const INIT_VARIABLES_ARRAY = 'INIT_VARIABLES_ARRAY';\r\n\r\n","import { CHANGE_MIXED_COLOR } from './all.actions';\r\n\r\nconst changeMixedColorAction = color => dispatch => {\r\n  return dispatch({type: CHANGE_MIXED_COLOR, payload: color});\r\n}\r\n\r\nexport default changeMixedColorAction;","import { \r\n  CHANGE_MIXED_ARRAY, \r\n  SELECT_MIXED_ITEM,\r\n  SELECT_ALL_MIXED_ITEMS,\r\n  REMOVE_ALL_MIXED_ITEMS } from './all.actions';\r\n\r\nexport const changeMixedArrayAction = array => dispatch => {\r\n  return dispatch({type: CHANGE_MIXED_ARRAY, payload: array});\r\n}\r\n\r\nexport const selectMixedAction = color => dispatch => {\r\n  return dispatch({type: SELECT_MIXED_ITEM, payload: color});\r\n}\r\n\r\nexport const selectAllMixedAction = array => dispatch => {\r\n  return dispatch({type: SELECT_ALL_MIXED_ITEMS, payload: array});\r\n}\r\n\r\nexport const removeAllmixedAction = () => dispatch => {\r\n  return dispatch({type: REMOVE_ALL_MIXED_ITEMS});\r\n}","import Color from 'color';\r\n\r\nexport const getDarkerArray = color => {\r\n  const darkerArray = [];\r\n  for (let i = 1; i <= 10; i++) {\r\n    darkerArray.push({selected: false, color: Color(color).darken(i * 5 / 100).hex()})\r\n  }\r\n  return darkerArray;\r\n}\r\n\r\nexport const getMixedArray = (mainColor, mixedWithColor) => {\r\n  const mixedArray = [];\r\n  const color = Color(mainColor);\r\n  for (let i = 1; i <= 10; i++) {\r\n    mixedArray.push({selected: false, color: color.mix(Color(mixedWithColor), i * 8 / 100).hex()})\r\n  }\r\n  return mixedArray;\r\n}\r\n\r\nexport const isVisibleRemoveBtn = array => {\r\n  let count = 0;\r\n  array.forEach(element => {\r\n    if (element.selected) {\r\n      count ++;\r\n    }\r\n  });\r\n  return count === array.length;\r\n}\r\n\r\nexport const getVariablesArray = colorsArray => {\r\n  const varArr = [];\r\n  \r\n  colorsArray.forEach((item, index) => {\r\n    const itemObj = {\r\n      variableName : `color-${index + 1}`, \r\n      color : item\r\n    }\r\n    varArr.push(itemObj);\r\n  })\r\n  return varArr;\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Panel as ColorPickerPanel } from 'rc-color-picker';\r\nimport ColorPicker from 'rc-color-picker';\r\n\r\nimport changeMainColorAction from '../redux/actions/change.main.color.action';\r\nimport changeMixedColorAction from './../redux/actions/change.mixed.color.action';\r\nimport { changeDarkLightAction } from '../redux/actions/darker.actions';\r\nimport { changeMixedArrayAction } from './../redux/actions/mixed.actions';\r\n\r\nimport { getDarkerArray, getMixedArray } from '../func/functions';\r\n\r\nimport 'rc-color-picker/assets/index.css';\r\n\r\nclass ColorPickerComponent extends Component {\r\n\r\n  changeMixedColor = ({color}) => {\r\n    this.props.changeMixedColor(this.props.mainColor, color);\r\n  }\r\n\r\n  changeMainColor = ({color}) => {\r\n    this.props.changeMainColor(color, this.props.mixedColor);\r\n  }\r\n  \r\n  render () {\r\n    \r\n    return ( \r\n      <div>\r\n        {this.props.hidden ?           \r\n          <ColorPicker\r\n            enableAlpha = {false}\r\n            animation = \"slide-up\"\r\n            color = {this.props.mixedColor}\r\n            onChange = {this.changeMixedColor}\r\n          /> \r\n          : \r\n          <ColorPickerPanel \r\n            enableAlpha = {false} \r\n            color = {this.props.mainColor} \r\n            onChange = {this.changeMainColor} \r\n            mode = \"RGB\" \r\n          />\r\n        } \r\n      </div>\r\n          \r\n        \r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    mainColor : store.mainColor.color,\r\n    mixedColor : store.mixedColor \r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({ \r\n  changeMainColor: (mainColor, mixedColor) => {\r\n    dispatch(changeMainColorAction(mainColor));\r\n    dispatch(changeDarkLightAction(getDarkerArray(mainColor)));\r\n    dispatch(changeMixedArrayAction(getMixedArray(mainColor, mixedColor)));\r\n  },\r\n  changeMixedColor: (mainColor, mixedColor) => {\r\n    dispatch(changeMixedColorAction(mixedColor));\r\n    dispatch(changeMixedArrayAction(getMixedArray(mainColor, mixedColor)));\r\n  } \r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ColorPickerComponent);\r\n\r\n\r\n","import { \r\n  CHANGE_DARKER_ARRAY, \r\n  SELECT_DARKER_ITEM,\r\n  SELECT_ALL_DARKER_ITEMS,\r\n  REMOVE_ALL_DARKER_ITEMS } from './all.actions';\r\n\r\nexport const changeDarkLightAction = array => dispatch => {\r\n  return dispatch({type: CHANGE_DARKER_ARRAY, payload: array});\r\n}\r\n\r\nexport const selectDarkLightAction = color => dispatch => {\r\n  return dispatch({type: SELECT_DARKER_ITEM, payload: color});\r\n}\r\n\r\nexport const selectAllDarkLightAction = array => dispatch => {\r\n  return dispatch({type: SELECT_ALL_DARKER_ITEMS, payload: array});\r\n}\r\n\r\nexport const removeAllDarkLightAction = () => dispatch => {\r\n  return dispatch({type: REMOVE_ALL_DARKER_ITEMS});\r\n}","import { REMOVE_SELECTED_COLOR } from './all.actions';\r\n\r\nconst removeSelectedColor = color => dispatch => {\r\n  return dispatch({type: REMOVE_SELECTED_COLOR, payload: color});\r\n}\r\n\r\nexport default removeSelectedColor;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport removeSelectedColor from './../redux/actions/remove.selected.color.action';\r\n\r\nimport './styles.scss';\r\n\r\nclass SelectedColors extends Component {\r\n\r\n  getEmptyElements = countOfElements => {\r\n    const emptyElements = [];\r\n    for(let i = 0; i < countOfElements; i++) {\r\n      emptyElements.push(<li key = {i}><i className = 'fas fa-times'></i></li>);\r\n    }\r\n    return emptyElements;\r\n  }\r\n\r\n  render () {\r\n    \r\n    return (\r\n      <div className = 'selected-colors-container'>\r\n        <h2>Select up to ten colors</h2>\r\n        <p>Select Colors by clicking on them</p>\r\n        <ul className = 'slected-list'>\r\n        {this.props.selectedColors.map((item, index) => (\r\n          <li \r\n            key = {index}\r\n            style = {{backgroundColor : `${item}`}}\r\n            onClick = {() => this.props.removeColor(item)}\r\n          >\r\n            <i className = 'fas fa-times'></i>\r\n          </li>\r\n        ))}        \r\n        {this.getEmptyElements(10 - this.props.selectedColors.length)}          \r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    selectedColors : store.selectedColors\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  removeColor : color => {\r\n    dispatch(removeSelectedColor(color));\r\n  }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectedColors);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { selectDarkLightAction, selectAllDarkLightAction, removeAllDarkLightAction } from '../redux/actions/darker.actions';\r\nimport { changeBgDarkLightAction } from './../redux/actions/change.background.actions';\r\nimport { isVisibleRemoveBtn } from '../func/functions';\r\n\r\nimport './styles.scss';\r\nlibrary.add(faTimes)\r\n\r\nclass DarkerAndLighterComponent extends Component {\r\n \r\n  render () {\r\n\r\n    return (\r\n      <div className = 'darker-container'>\r\n        <h2 className = 'darker-title'>Darker and Lighter</h2>        \r\n        <ul \r\n          className = 'darker-list'\r\n          style = {this.props.isDarkBg.isDarkBgDarker ? {backgroundColor : '#000'} : null}\r\n        >\r\n        {this.props.darkerArray.map((item, index) => (\r\n          <li  \r\n            key = {index}          \r\n            style = {{backgroundColor : `${item.color}`}}\r\n            className = {item.selected ? 'selected' : ''}\r\n            onClick = {()=>this.props.selectColor(item.color)}\r\n          >\r\n          <FontAwesomeIcon icon = 'times' className = 'fas fa-times' />\r\n          </li>\r\n        ))}                    \r\n        </ul>\r\n        <div className = 'btns-container'>\r\n          <button \r\n            className = 'btn'\r\n            onClick = {this.props.changeBg}\r\n          >\r\n            Dark background\r\n          </button>\r\n          <button \r\n            className = 'btn'\r\n            onClick = {() => this.props.selectAllColors(this.props.darkerArray)}\r\n          >\r\n            Select all\r\n          </button>\r\n          <button \r\n            className = {isVisibleRemoveBtn(this.props.darkerArray) ? 'btn danger' : 'btn danger hidden'}\r\n            onClick = {() => this.props.removeAllColors(this.props.darkerArray)}\r\n          >\r\n            Remove all\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    darkerArray : store.darkerArray,\r\n    isDarkBg : store.isDarkBg\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({ \r\n  selectColor : color => {\r\n    dispatch(selectDarkLightAction(color));\r\n  },\r\n  selectAllColors : array => {\r\n    dispatch(selectAllDarkLightAction(array));    \r\n  },\r\n  removeAllColors : () => {\r\n    dispatch(removeAllDarkLightAction());    \r\n  },\r\n  changeBg : () => {\r\n    dispatch(changeBgDarkLightAction());\r\n  }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DarkerAndLighterComponent);\r\n","import { CHANGE_BG_DARKER, CHANGE_BG_MIXED } from './all.actions';\r\n\r\nexport const changeBgDarkLightAction = () => dispatch => {\r\n  return dispatch({type: CHANGE_BG_DARKER});\r\n}\r\n\r\nexport const changeBgMixedAction = () => dispatch => {\r\n  return dispatch({type: CHANGE_BG_MIXED});\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport ColorPickerComponent from './color.picker';\r\nimport { changeBgMixedAction } from './../redux/actions/change.background.actions';\r\nimport { selectAllMixedAction, selectMixedAction, removeAllmixedAction } from './../redux/actions/mixed.actions';\r\nimport { isVisibleRemoveBtn } from '../func/functions';\r\n\r\nimport './styles.scss';\r\nlibrary.add(faTimes)\r\n\r\nclass MixedComponent extends Component {\r\n \r\n  render () {\r\n\r\n    return (\r\n      <div className = 'mixed-container'>\r\n        <div className = 'mixed-title-container'>\r\n          <h2 className = 'mixed-title'>Mixed with</h2>\r\n          <ColorPickerComponent hidden = {true} /> \r\n        </div>              \r\n        <ul \r\n          className = 'mixed-list'\r\n          style = {this.props.isDarkBg.isDarkBgMixed ? {backgroundColor : '#000'} : null}\r\n        >\r\n        {this.props.mixedArray.map((item, index) => (\r\n          <li  \r\n            key = {index}          \r\n            style = {{backgroundColor : `${item.color}`}}\r\n            className = {item.selected ? 'selected' : ''}\r\n            onClick = {()=>this.props.selectColor(item.color)}\r\n          >\r\n            <FontAwesomeIcon icon = 'times' className = 'fas fa-times' />\r\n          </li>\r\n        ))}                    \r\n        </ul>\r\n        <div className = 'btns-container'>\r\n          <button \r\n            className = 'btn'\r\n            onClick = {this.props.changeBg}\r\n          >\r\n            Dark background\r\n          </button>\r\n          <button \r\n            className = 'btn'\r\n            onClick = {() => this.props.selectAllColors(this.props.mixedArray)}\r\n          >\r\n            Select all\r\n          </button>\r\n          <button \r\n            className = {isVisibleRemoveBtn(this.props.mixedArray) ? 'btn danger' : 'btn danger hidden'}\r\n            onClick = {() => this.props.removeAllColors(this.props.mixedArray)}\r\n          >\r\n            Remove all\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    mixedArray : store.mixedArray,\r\n    isDarkBg : store.isDarkBg\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({ \r\n  selectColor : color => {\r\n    dispatch(selectMixedAction(color));\r\n  },\r\n  selectAllColors : array => {\r\n    dispatch(selectAllMixedAction(array));    \r\n  },\r\n  removeAllColors : () => {\r\n    dispatch(removeAllmixedAction());    \r\n  },\r\n  changeBg : () => {\r\n    dispatch(changeBgMixedAction());\r\n  }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MixedComponent);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport ColorPickerComponent from '../color.picker';\r\nimport SelectedColors from '../slected.colors';\r\nimport DarkerAndLighterComponent from '../darker.lighter';\r\nimport MixedComponent from './../mixed';\r\n\r\nimport '../styles.scss';\r\n\r\nclass CreateComponent extends Component {\r\n\r\n  render () {\r\n    \r\n    return (\r\n      <div \r\n        className = 'create-container'\r\n        style = {{backgroundColor : `${this.props.mainColor.color}`}}\r\n      >\r\n        <h1 style = {this.props.mainColor.isLight ? {color : '#000'} : {color : '#fff'}}>\r\n          Choose your color\r\n        </h1>\r\n        <ColorPickerComponent hidden = {false} />\r\n        <SelectedColors />\r\n        <DarkerAndLighterComponent />\r\n        <MixedComponent />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    mainColor: store.mainColor  \r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CreateComponent);\r\n","import React, { Component } from 'react';\r\n\r\nimport logo from './../../assets/logo-light.svg';\r\nimport '../styles.scss';\r\n\r\nclass FooterComponent extends Component {\r\n\r\n  render () {\r\n    \r\n    return (\r\n      <footer>\r\n        <img \r\n          className = 'footer-img'\r\n          src = 'https://dosandk.github.io/react-challenge-colorizr/images/logo-light.svg' \r\n          alt = 'logo'\r\n        />\r\n        <h3>Build with React, Redux, React Router</h3>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FooterComponent;\r\n","import React from 'react';\r\n\r\nimport './styles.scss';\r\n\r\nconst ExampleComponent = ({color, selected, dispatch}) => (\r\n      <div \r\n        className = {selected ? 'example-container selected' : 'example-container'}\r\n        onClick = {() => dispatch(color)}\r\n      >\r\n        <div \r\n          className = 'example'\r\n          style = {{backgroundColor : `${color}`}}\r\n        >\r\n        </div>\r\n          <span className = 'color-hex'>{color}</span>\r\n      </div>\r\n    );\r\n\r\nexport default ExampleComponent;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport SelectedColors from '../slected.colors';\r\nimport ExampleComponent from './../example';\r\n\r\nimport { selectFlatItemAction, selectMaterialItemAction } from './../../redux/actions/flat.material.actions';\r\n\r\nimport '../styles.scss';\r\n\r\nclass ExploreComponent extends Component {\r\n  \r\n  render () {\r\n    \r\n    return (\r\n      <div className = 'explore-container'>\r\n      <h1>Explore presets</h1>\r\n      <SelectedColors />\r\n      <h2>Flat</h2>\r\n      <div className = 'collection-container'>\r\n        {this.props.flat.map((item, index) => (\r\n          <ExampleComponent \r\n            color = {item.color} \r\n            selected = {item.selected} \r\n            key = {index}\r\n            dispatch = {this.props.selectFlatItem}\r\n          />\r\n        ))}\r\n      </div>\r\n      <h2>Material</h2>\r\n      <div className = 'collection-container'>\r\n        {this.props.material.map((item, index) => (\r\n          <ExampleComponent \r\n            color = {item.color} \r\n            selected = {item.selected} \r\n            key = {index}\r\n            dispatch = {this.props.selectMaterialItem}\r\n          />\r\n        ))}\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    flat : store.flatArray,\r\n    material : store.materialArray\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  selectFlatItem : color => {\r\n    dispatch(selectFlatItemAction(color));\r\n  },\r\n  selectMaterialItem : color => {\r\n    dispatch(selectMaterialItemAction(color));\r\n  }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExploreComponent);\r\n","import { SELECT_FLAT_ITEM, SELECT_MATERIAL_ITEM } from './all.actions';\r\n\r\nexport const selectFlatItemAction = color => dispatch => {\r\n  return dispatch({type: SELECT_FLAT_ITEM, payload: color});\r\n}\r\n\r\nexport const selectMaterialItemAction = color => dispatch => {\r\n  return dispatch({type: SELECT_MATERIAL_ITEM, payload: color});\r\n}","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './styles.scss';\r\nlibrary.add(faCheck)\r\n\r\nconst SchemeComponent = props => { \r\n  return (\r\n      <div \r\n        className = 'scheme-container'\r\n        onClick = {() => props.dispatch(props)}\r\n      >\r\n        <h2 className = 'scheme-title'>\r\n          {props.name}\r\n          <span className = {props.selected ? 'checked selected' : 'checked'}>\r\n            <FontAwesomeIcon icon = 'check' />            \r\n          </span>        \r\n        </h2>\r\n        <div className = 'scheme'>\r\n        {props.colors.map((item, index) => (\r\n          <div\r\n          style = {{backgroundColor : `${item}`}}\r\n          className = 'scheme-color-item'\r\n          key = {index}\r\n          >\r\n          </div>\r\n        ))}\r\n        </div>          \r\n      </div>\r\n    )};\r\n\r\nexport default SchemeComponent;\r\n","import { SELECT_SCHEME_ITEM } from './all.actions';\r\n\r\nconst selectSchemeItemAction = scheme => dispatch => {\r\n  return dispatch({type: SELECT_SCHEME_ITEM, payload: scheme});\r\n}\r\n\r\nexport default selectSchemeItemAction;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport SchemeComponent from './../scheme';\r\nimport SelectedColors from './../slected.colors';\r\n\r\nimport selectSchemeItemAction from './../../redux/actions/schemes.array.actions';\r\n\r\nimport '../styles.scss';\r\n\r\nclass PresetsComponent extends Component {\r\n\r\n  render () { \r\n    \r\n    return (\r\n      <div className = 'presets-container'>\r\n      <h1>Explore ready to use colours schemes</h1>\r\n      <SelectedColors />\r\n      {this.props.schemesArray.map((item, index) => (\r\n        <SchemeComponent \r\n          {...item}\r\n          key = {index}\r\n          dispatch = {this.props.selectSchemeItem}\r\n        />\r\n      ))}\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    schemesArray : store.schemesArray\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  selectSchemeItem : scheme => {\r\n    dispatch(selectSchemeItemAction(scheme))\r\n  }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PresetsComponent);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Color from 'color';\r\n\r\nimport './styles.scss';\r\n\r\nclass TableComponent extends Component {\r\n  \r\n  render () { \r\n    \r\n    return (\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Color</th>\r\n            <th>Hex value</th>\r\n            <th>RGB value</th>\r\n            <th>Variable name</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.props.selectedColors.map((item, index) => (\r\n            <tr key = {index}>\r\n              <td style = {{backgroundColor : `${item}`}}></td>\r\n              <td>{item}</td>\r\n              <td>{Color(item).string()}</td>\r\n              <td>\r\n                <input\r\n                className = 'variable-input'\r\n                type =' text' \r\n                data-index = {index}         \r\n                defaultValue = {`color-${index + 1}`}\r\n                onChange = {this.props.onCgangeVar}\r\n                />\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    selectedColors : store.selectedColors\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TableComponent);","import React, { Component } from 'react';\r\n\r\nimport './styles.scss';\r\n\r\nclass VariablesComponent extends Component { \r\n\r\n  constructor (props) {\r\n    super (props)\r\n    this.state = {\r\n      sass : true,\r\n      less : false,\r\n      stylus : false\r\n    }\r\n  }\r\n  activateItem = itemName => {\r\n    for(let key in this.state) {\r\n      this.setState({[key] : key === itemName})\r\n    };\r\n    this.setState({active : itemName})\r\n  }\r\n  \r\n  render () {\r\n    return (\r\n      <div className = 'variables-container'>\r\n        <h2 className = 'export-title'>Export your code</h2>\r\n        <ul className = 'nav variable'>\r\n          <li\r\n          onClick = {() => this.activateItem('sass')}\r\n          className = {this.state.sass ? 'active' : ''}\r\n          >\r\n            Sass\r\n          </li>\r\n          <li \r\n            onClick = {() => this.activateItem('less')}\r\n            className = {this.state.less ? 'active' : ''}\r\n          >\r\n            Less\r\n          </li>\r\n          <li\r\n          onClick = {() => this.activateItem('stylus')}\r\n          className = {this.state.stylus ? 'active' : ''}\r\n          >\r\n            Stylus\r\n          </li>          \r\n        </ul>\r\n        <pre>\r\n          {this.props.variableArray.map((item, index) => (\r\n            <code key = {index}>\r\n              {this.state.sass ? \r\n              <span>\r\n                {`$${item.variableName}: ${item.color};`}\r\n              </span>\r\n              : null}\r\n              {this.state.less ? \r\n              <span>\r\n                {`@${item.variableName}: ${item.color};`}\r\n              </span>\r\n              : null}\r\n              {this.state.stylus ? \r\n              <span>\r\n                {`${item.variableName} = ${item.color}`}\r\n              </span>\r\n              : null}\r\n              <br/>\r\n            </code>\r\n          ))}\r\n        </pre>      \r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default VariablesComponent;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport TableComponent from './../table';\r\nimport VariablesComponent from './../variables';\r\n\r\nimport { getVariablesArray } from './../../func/functions';\r\nimport { initVariatablesAction, changeVariableAction } from './../../redux/actions/variable.array.actions';\r\n\r\nimport '../styles.scss';\r\n\r\nclass ExportComponent extends Component {\r\n\r\n  componentDidMount () {\r\n    this.props.initVariableArray(getVariablesArray(this.props.selectedColors));\r\n  }\r\n\r\n  changeVariable = ({target}) => {\r\n    const data = {\r\n      index : target.attributes.getNamedItem('data-index').value,\r\n      variable : target.value\r\n    }    \r\n    this.props.changeVariable(data);   \r\n  }\r\n\r\n  render () {\r\n    \r\n    return (\r\n      <div className = 'export-container'>\r\n        <h1>Customize and Export colors for Sass, Less or Stylus</h1>\r\n        <TableComponent onCgangeVar = {this.changeVariable}/>        \r\n        <VariablesComponent variableArray = {this.props.variableArray}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    selectedColors : store.selectedColors,\r\n    variableArray : store.variableArray\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  initVariableArray : array => {\r\n    dispatch(initVariatablesAction(array))\r\n  },\r\n  changeVariable : data => {\r\n    dispatch(changeVariableAction(data))\r\n  }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExportComponent);\r\n","import { INIT_VARIABLES_ARRAY, CHANGE_VARIABLE } from './all.actions';\r\n\r\nexport const initVariatablesAction = array => dispatch => {\r\n  return dispatch({type: INIT_VARIABLES_ARRAY, payload: array});\r\n}\r\n\r\nexport const changeVariableAction = data => dispatch => {\r\n  return dispatch({type: CHANGE_VARIABLE, payload: data});\r\n}","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport HeaderComponent from './header.component';\nimport CreateComponent from './create.component';\nimport FooterComponent from './footer.component';\nimport ExploreComponent from './explore.component';\nimport PresetsComponent from './presets.component';\nimport ExportComponent from './export.component';\n\nimport '../styles.scss';\n\nclass AppComponent extends Component {\n\n  render () {\n    \n    return (\n      <BrowserRouter> \n        <div className = 'app-container'>\n          <HeaderComponent />\n            <Switch>\n              <Route exact path = '/' component = {CreateComponent} /> \n              <Route path = '/explore' component = {ExploreComponent} /> \n              <Route path = '/presets' component = {PresetsComponent} />\n              <Route path = '/export' component = {ExportComponent} />\n            </Switch>\n          <FooterComponent />  \n        </div>           \n      </BrowserRouter>      \n    );\n  }\n}\n\nexport default AppComponent;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import Color from 'color';\r\n\r\nconst initState = {\r\n  color : '#3b97d3',\r\n  isLight : true\r\n}\r\n\r\nconst mainColorReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n\r\n    case 'CHANGE_MAIN_COLOR':\r\n      const color = Color(action.payload);\r\n      return { color : action.payload, isLight : color.isLight() };\r\n\r\n    default:\r\n      return state;\r\n      \r\n  }  \r\n}\r\n  \r\nexport default mainColorReducer;","import { getDarkerArray } from '../../func/functions';\r\n\r\nconst initState = getDarkerArray('#3b97d3');\r\n\r\nconst darkerArrayReducer = (state = initState, action) => {\r\n  switch(action.type) {\r\n\r\n    case 'CHANGE_DARKER_ARRAY':\r\n      return action.payload;\r\n\r\n    case 'SELECT_DARKER_ITEM':\r\n      state.forEach(item => {\r\n        if (item.color === action.payload) {\r\n          item.selected = !item.selected;\r\n        }\r\n      })\r\n      return [...state];\r\n\r\n    case 'SELECT_ALL_DARKER_ITEMS':\r\n      state.forEach(item => item.selected = true);\r\n      return [...state];\r\n\r\n    case 'REMOVE_ALL_DARKER_ITEMS':\r\n      state.forEach(item => item.selected = false);\r\n      return [...state];\r\n\r\n    case 'REMOVE_SELECTED_COLOR':\r\n      state.forEach(item => {\r\n        if (item.selected && item.color === action.payload) {\r\n          item.selected = false;\r\n        }\r\n      });\r\n      return [...state];\r\n\r\n    default:\r\n      return [...state];\r\n  }\r\n}\r\n  \r\nexport default darkerArrayReducer;","const selectedColorsReducer = (state = [], action) => {  \r\n  switch(action.type) {\r\n\r\n    case 'SELECT_DARKER_ITEM':\r\n      if (state.includes(action.payload)) {\r\n        return [...state.filter(item => item !== action.payload)];\r\n      } else {\r\n        state.push(action.payload); \r\n        return state.length >= 10 ? [...state.slice(state.length - 10, state.length)] : [...state];\r\n      }    \r\n\r\n    case 'REMOVE_SELECTED_COLOR':\r\n      return [...state.filter(item => item !== action.payload)];\r\n    \r\n    case 'SELECT_ALL_DARKER_ITEMS':\r\n      const newDarkerState = []; \r\n      action.payload.forEach(item => newDarkerState.push(item.color));\r\n      return [...newDarkerState];\r\n\r\n    case 'REMOVE_ALL_DARKER_ITEMS':\r\n      return [];\r\n    \r\n    case 'SELECT_MIXED_ITEM':\r\n      if (state.includes(action.payload)) {\r\n        return [...state.filter(item => item !== action.payload)];\r\n      } else {\r\n        state.push(action.payload); \r\n        return state.length >= 10 ? [...state.slice(state.length - 10, state.length)] : [...state];\r\n      } \r\n      \r\n    case 'SELECT_FLAT_ITEM':\r\n      if (state.includes(action.payload)) {\r\n        return [...state.filter(item => item !== action.payload)];\r\n      } else {\r\n        state.push(action.payload); \r\n        return state.length >= 10 ? [...state.slice(state.length - 10, state.length)] : [...state];\r\n      } \r\n    \r\n    case 'SELECT_MATERIAL_ITEM':\r\n      if (state.includes(action.payload)) {\r\n        return [...state.filter(item => item !== action.payload)];\r\n      } else {\r\n        state.push(action.payload); \r\n        return state.length >= 10 ? [...state.slice(state.length - 10, state.length)] : [...state];\r\n      } \r\n    \r\n    case 'SELECT_ALL_MIXED_ITEMS':\r\n      const newMixedState = []; \r\n      action.payload.forEach(item => newMixedState.push(item.color));\r\n      return [...newMixedState];\r\n\r\n    case 'SELECT_SCHEME_ITEM':\r\n      return [...action.payload.colors]; \r\n\r\n    case 'REMOVE_ALL_MIXED_ITEMS':\r\n      return [];\r\n\r\n    default:\r\n      return [...state];\r\n  }\r\n}\r\n  \r\nexport default selectedColorsReducer;","const initState = {\r\n  isDarkBgDarker : false,\r\n  isDarkBgMixed : false\r\n}\r\n\r\nconst changeBgReducer = (state = initState, action) => {\r\n  switch(action.type) {\r\n\r\n    case 'CHANGE_BG_DARKER':\r\n      state.isDarkBgDarker = !state.isDarkBgDarker;\r\n      return state;  \r\n\r\n    case 'CHANGE_BG_MIXED':\r\n      state.isDarkBgMixed = !state.isDarkBgMixed;\r\n      return state;    \r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n  \r\nexport default changeBgReducer;","const mixedColorReducer = (state = '#f1eb1a', action) => { \r\n  return action.type === 'CHANGE_MIXED_COLOR' ? action.payload : state;\r\n}\r\n  \r\nexport default mixedColorReducer;","import { getMixedArray } from './../../func/functions';\r\n\r\nconst initState = getMixedArray('#3b97d3', '#f1eb1a');\r\n\r\nconst mixedArrayReducer = (state = initState, action) => {\r\n  switch(action.type) {\r\n\r\n    case 'CHANGE_MIXED_ARRAY':\r\n      return action.payload;\r\n\r\n    case 'SELECT_MIXED_ITEM':\r\n      state.forEach(item => {\r\n        if (item.color === action.payload) {\r\n          item.selected = !item.selected;\r\n        }\r\n      })\r\n      return [...state];\r\n\r\n    case 'SELECT_ALL_MIXED_ITEMS':\r\n      state.forEach(item => item.selected = true);\r\n      return [...state];\r\n\r\n    case 'REMOVE_ALL_MIXED_ITEMS':\r\n      state.forEach(item => item.selected = false);\r\n      return [...state];\r\n\r\n    case 'REMOVE_SELECTED_COLOR':\r\n      state.forEach(item => {\r\n        if (item.selected && item.color === action.payload) {\r\n          item.selected = false;\r\n        }\r\n      });\r\n      return [...state];\r\n\r\n    default:\r\n      return [...state];\r\n  }\r\n}\r\n  \r\nexport default mixedArrayReducer;","export const flat = [{\r\n  \"color\": \"#a08986\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#4387bf\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#a6a8b9\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#b425eb\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#63cce1\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#a7dd27\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#8e6578\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#039e5b\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#b02bea\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#bbdc35\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#8de18d\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#172a00\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#ccc937\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#2f9863\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#cab899\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#e5d21b\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#3f9d04\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#347eaa\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#ab8962\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#e9b841\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#a31b42\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#a18544\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#43fa5b\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#02a320\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#ece300\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#09588a\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#dc0239\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#7d6584\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#5c7ce3\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#25b511\",\r\n  \"selected\": false\r\n}];\r\n\r\nexport const material = [{\r\n  \"color\": \"#870862\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#74e9b1\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#6a3682\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#cc0ed0\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#20e6fb\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#26c99e\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#f2da4d\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#ed2eec\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#629154\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#a531b8\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#fcc841\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#6a4e09\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#d762ec\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#ce4a8c\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#676f8c\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#2dd220\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#d46d9b\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#d9c05f\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#da3164\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#deaff0\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#84941e\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#cfa996\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#026d07\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#cfd7f1\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#65ea31\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#2af191\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#d5491b\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#3f082e\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#21b8d2\",\r\n  \"selected\": false\r\n}, {\r\n  \"color\": \"#5f46ae\",\r\n  \"selected\": false\r\n}];\r\n\r\nexport const presetns = [{\r\n  \"colors\": [\r\n    \"#664e10\",\r\n    \"#3bd47e\",\r\n    \"#598a89\",\r\n    \"#4b4ef8\",\r\n    \"#8bf75a\"\r\n  ],\r\n  \"name\": \"Aspirin\",\r\n  \"selected\": false\r\n}, {\r\n  \"colors\": [\r\n    \"#deef5a\",\r\n    \"#ab442e\",\r\n    \"#bbead8\",\r\n    \"#d5e82a\",\r\n    \"#0747a2\"\r\n  ],\r\n  \"name\": \"Bird\",\r\n  \"selected\": false\r\n}, {\r\n  \"colors\": [\r\n    \"#65b03f\",\r\n    \"#139cc0\",\r\n    \"#b7410a\",\r\n    \"#5af68a\",\r\n    \"#30f504\"\r\n  ],\r\n  \"name\": \"Firenze\",\r\n  \"selected\": false\r\n}, {\r\n  \"colors\": [\r\n    \"#851653\",\r\n    \"#9cd14c\",\r\n    \"#0889e5\",\r\n    \"#f1ba5b\",\r\n    \"#7e3245\"\r\n  ],\r\n  \"name\": \"Honey\",\r\n  \"selected\": false\r\n}, {\r\n  \"colors\": [\r\n    \"#2cc3ca\",\r\n    \"#4ab056\",\r\n    \"#53188c\",\r\n    \"#47632a\",\r\n    \"#05a1bf\"\r\n  ],\r\n  \"name\": \"Retromatic\",\r\n  \"selected\": false\r\n}, {\r\n  \"colors\": [\r\n    \"#b90bde\",\r\n    \"#6ac74d\",\r\n    \"#bfbdbb\",\r\n    \"#7e4f10\",\r\n    \"#192e39\"\r\n  ],\r\n  \"name\": \"Sandy\",\r\n  \"selected\": false\r\n}, {\r\n  \"colors\": [\r\n    \"#8c7c37\",\r\n    \"#663bbc\",\r\n    \"#0ddb12\",\r\n    \"#a8914a\",\r\n    \"#aacd46\"\r\n  ],\r\n  \"name\": \"Sky\",\r\n  \"selected\": false\r\n}, {\r\n  \"colors\": [\r\n    \"#6b707b\",\r\n    \"#27c77f\",\r\n    \"#5fc4a6\",\r\n    \"#0ecff9\",\r\n    \"#83fd97\"\r\n  ],\r\n  \"name\": \"Sunset\",\r\n  \"selected\": false\r\n}, {\r\n  \"colors\": [\r\n    \"#3c3e59\",\r\n    \"#10d967\",\r\n    \"#5641d7\",\r\n    \"#829d7a\",\r\n    \"#09e37f\"\r\n  ],\r\n  \"name\": \"Times\",\r\n  \"selected\": false\r\n}, {\r\n  \"colors\": [\r\n    \"#2c2143\",\r\n    \"#e0bc88\",\r\n    \"#256c07\",\r\n    \"#e1637e\",\r\n    \"#0f38b1\"\r\n  ],\r\n  \"name\": \"Wolf\",\r\n  \"selected\": false\r\n}]","import { presetns } from '../../data';\r\n\r\nconst schemesArrayReducer = (state = presetns, action) => {\r\n  switch (action.type) {\r\n\r\n    case 'SELECT_SCHEME_ITEM':\r\n      state.forEach(item => item.selected = item.name === action.payload.name)\r\n      return [...state];    \r\n   \r\n    default:\r\n     return [...state];\r\n  }\r\n}\r\n\r\nexport default schemesArrayReducer;\r\n\r\n","const variableArrayReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n\r\n    case 'INIT_VARIABLES_ARRAY':\r\n      return [...action.payload];\r\n      \r\n    case 'CHANGE_VARIABLE':      \r\n      state[action.payload.index].variableName = action.payload.variable;      \r\n      return [...state];\r\n   \r\n    default:\r\n     return [...state];\r\n  }\r\n}\r\n\r\nexport default variableArrayReducer;\r\n\r\n","import { combineReducers } from 'redux';\r\nimport mainColorReducer from './main.color.reducer';\r\nimport darkerArrayReducer from './darker.array.reducer';\r\nimport selectedColorsReducer from './selected.colors.reducer';\r\nimport changeBgReducer from './change.background.reducer';\r\nimport mixedColorReducer from './mixed.color.reducer';\r\nimport mixedArrayReducer from './mixed.array.reducer';\r\nimport { flatReducer, materialReducer } from './flat.material.reducers';\r\nimport schemesArrayReducer from './schemes.array.reducer';\r\nimport variableArrayReducer from './variable.array.reducer';\r\n\r\nexport default combineReducers ({\r\n  mainColor : mainColorReducer,\r\n  mixedColor : mixedColorReducer,\r\n  darkerArray : darkerArrayReducer,\r\n  selectedColors : selectedColorsReducer,\r\n  isDarkBg : changeBgReducer,\r\n  mixedArray : mixedArrayReducer,\r\n  flatArray : flatReducer,\r\n  materialArray : materialReducer,\r\n  schemesArray : schemesArrayReducer,\r\n  variableArray : variableArrayReducer\r\n})","import { flat, material } from '../../data';\r\n\r\nexport const flatReducer = (state = flat, action) => {\r\n  switch (action.type) {\r\n\r\n    case 'SELECT_FLAT_ITEM':\r\n      state.forEach(item => {\r\n        if (item.color === action.payload) {\r\n          item.selected = !item.selected;\r\n        }\r\n      })\r\n      return [...state];\r\n    \r\n    case 'REMOVE_SELECTED_COLOR':\r\n      state.forEach(item => {\r\n        if (item.selected && item.color === action.payload) {\r\n          item.selected = false;\r\n        }\r\n      });\r\n      return [...state];\r\n\r\n    default:\r\n     return [...state];\r\n  }\r\n}\r\n\r\nexport const materialReducer = (state = material, action) => {\r\n  switch (action.type) {\r\n\r\n    case 'SELECT_MATERIAL_ITEM':\r\n      state.forEach(item => {\r\n        if (item.color === action.payload) {\r\n          item.selected = !item.selected;\r\n        }\r\n      })\r\n      return [...state];\r\n\r\n    case 'REMOVE_SELECTED_COLOR':\r\n      state.forEach(item => {\r\n        if (item.selected && item.color === action.payload) {\r\n          item.selected = false;\r\n        }\r\n      });\r\n      return [...state];\r\n\r\n    default:\r\n     return [...state];\r\n  }\r\n}","import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from './reducers';\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport AppComponent from './components/containers/app.component';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/create.store';\n\nimport './index.scss';\n\n\nReactDOM.render(\n                <Provider store = {store}>  \n                  <AppComponent />\n                </Provider>\n                  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}